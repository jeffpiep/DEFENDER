'-----------------------------------------------------------
'
'					INTERCEPTOR
'
'Homage to  Tomohiro Nishikado's 1976 Interceptor Coin Op Game
'For Atari 800XL 8-Bit BASIC 10-Liner
'One-player game with joystick
'
'Jeff Piepmeier
'February 18, 2017
'http://jeffpiepmeier.blogspot.com/
'http://github.com/jeffpiep/
'
'Parsed with TurboBASIC XL Parser Tool 
'http://github.com/dmsc/tbxl-parser
$options +optimize, optimize=-convert_percent-const_replace
'Tested on Altirra
'bitmap graphics developed with Mad Studio
'-----------------------------------------------------------

'-----------------------------------------------------------
' DL INSTRUCTIONS from 
' https://www.atariarchives.org/mapping/appendix8.php
'
'Instruction   BASIC   Scan   Pixels  Bytes  Comments
' Decimal   Hex   mode   lines   line   line
' 112       70     --       8     --     --      8 blank lines
'Display instructions
'   2        2      0       8     40     40    text mode 0
'   6        6      1       8     20     20    text mode l
'   7        7      2      16     20     20    text mode 2
'  13        D      7       2    160     40    graphics mode 7
'Jump instructions  (three bytes long)
'   1        1     --      --     --     --    jump to location
'  65       41     --      --     --     --    jump and wait for VBLANK
'                            decimal   hex   bit
'   Horizontal scroll           16     10    4
'   Vertical scroll             32     20    5
'   Load memory scan            64     40    6
'-----------------------------------------------------------

'-----------------------------------------------------------
'screen design
'
' graphics 15 - 4 colors, 160 x 192, 1 byte per 4 pixels
' graphics 1 - 20 chars per line
' 8 lines of gr 15 is 16 screens of a gr 1 line 
' can use some space for PM?
'-----------------------------------------------------------

'TODO: don't push down graphics - just use RAM below graphics. 
' WHY CAN I NOT reserve 34 pages of RAM? Gr. 7 screen gets blocked. THere's a 4K boundary jump that needs fixing!

DIM A$(26)
A$="ABCDEFGHIJKLMNOPQRSTUVWXYZ"

'MAKE SPACE FOR LOOK UP TABLE
'each position is 3 x 20 = 60 bytes per position
'60 BYTES PER POSITION X 140 POSITIONS = 8400 BYTES
GR.15
  REM A050: x3   blank 8
  REM A053:      mode E @ A150
  REM A056: x93  mode E
  REM A0B3:      mode E @ B000
  REM A0B6: x65  mode E
  REM A0F7:      mode 2 @ BF60
  REM A0FA: x3   mode 2
  REM A0FD:      waitvbl A050
  
POKE 559,0
' WRITE LUT
LUT=$7F00
ADDR=LUT
LINEONE=42176 : REM depends upon RAMPTOP
FOR COLS=0 TO 139
    FOR ROWS=0 TO 19
        POKE ADDR,86
        DPOKE ADDR+1,LINEONE+COLS+ROWS*160
        ADDR=ADDR+3
    NEXT ROWS
NEXT COLS

DLIST = DPEEK(560): REM GET DISPLAY LIST LOCATION - SHOULD BE 7F50
MOVE ADR("\46\60\BF\00\4E\50\A1"),DLIST+3,7
POKE DLIST+30,$D
MOVE ADR("\41\50\A0"),DLIST+91,3
'DLIST+30

MOVE LUT,DLIST+31,60

POKE 559,34 : REM TURN ANTIC BACK ON

POKE $D404,15
FOR I=0 TO 19
    MOVE ADR(A$),LINEONE+I*160,26
NEXT I

LIVES=7
SCORE=0
? "DEFENDER",LIVES;"  ";SCORE;
COLOR 1:PLOT 0,0:DRAWTO 159,0
COLOR 2:PLOT 0,0:DRAWTO 159,21
COLOR 3:PLOT 0,21:DRAWTO 159,21

XWLD = 0

WHILE 1=1
XSCL = XWLD 

PAUSE 0
MOVE LUT+TRUNC(XSCL)*60,DLIST+31,60

XWLD = (XWLD + 1) MOD 140

    



WEND





100 GOTO 100


