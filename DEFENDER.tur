'-----------------------------------------------------------
'
'                       DEFENDER
'
'For Atari 800XL 8-Bit BASIC 10-Liner
'One-player game with joystick
'
'Jeff Piepmeier
'January 31, 2018
'http://jeffpiepmeier.blogspot.com/
'http://github.com/jeffpiep/
'
'Parsed with TurboBASIC XL Parser Tool 
'http://github.com/dmsc/tbxl-parser
$options +optimize
'use %0 replace to get longer lines (less memory?)
'options +optimize, optimize=-convert_percent-const_replace
'Tested on Altirra
'bitmap graphics developed with Mad Studio
'-----------------------------------------------------------

'base the memory map on graphics mode 15
GR.15

'color scheme: 
MOVE ADR("\0E\36\D6\88"),708,4

'START: build new display list
DLIST = $A050: REM GET DISPLAY LIST LOCATION - SHOULD BE A050
'SHORTEN DISPLAY LIST SO STEAL FEWER CPU CYCLES
'one line of graphics 1 mapped to text window; wait for vertical scan
MOVE ADR("\46\62\BF\41\50\A0"),DLIST+3,7

'write coarse-scrolling LUT to RAM below video
MODE = 6 : REM GR2=6 OR GR12 ANTIC MODE 4 = 4
FIELDWIDTH = 160 : REM OR 180
QUARTER = FIELDWIDTH/4 : REM WILL USE LATER
LUT=$7F00
ADDR=LUT
LINEONE=42176 : REM start of character graphics in video ram
FOR COLS=0 TO 139
    ? 139-COLS;"  ";
    FOR ROWS=0 TO 19
        POKE ADDR,80+MODE
        DPOKE ADDR+1,LINEONE+COLS+ROWS*FIELDWIDTH
        ADDR=ADDR+3
    NEXT ROWS
    POKE 657,2
NEXT COLS

'set up PM graphics
'SET UP SPRITES/PLAYER MISSLE GRAPHICS
POKE $D407,$B0 : REM PMBASE at B000 inside of GR 15 setup
PM=$B400:REM PM*$100+$200 TO POINT TO FIRST PLAYER
DPOKE 704,8 : REM COLOR OF PLAYER 0, DPOKE SAVES A SPACE OVER POKE
DPOKE $D008, $0301 : REM DOUBLE WIDTH P0, QUAD for P1
DPOKE $D00A, $0303 : REM QUAD WIDTH P2,P3
POKE 53277,3: REM ENABLE PM DISPLAY
SHIPADR = ADR("\00\00\00\00\20\70\F8\7E\FF\70\00\00\00\00\04\0E\1F\7E\FF\0E\00\00\00\00") + 5
REM Priority options in order                      Decimal   Bit
REM Player 0 - 3, playfield 0 - 3, BAK
REM (background)                                       1      0
REM Four missiles = fifth player                      16      4
REM Overlaps of players have 3rd color                32      5
POKE 623,49 : REM SET GPRIOR 49 = 1+16+32
REM RADAR SPRITE
MOVE ADR("\F0\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\F0"),$B32A,20

'set up new character set by copying the one in ROM to blank space in gr.15 
CHROM=PEEK(756)*256
MOVE CHROM,$B800,512
POKE 756,$B8
'copy some ATASCII characters into !"#
MOVE CHROM+512+6*8,$B800+1*8,16
'MOVE CHROM+512+7*8,$B800+2*8,8
MOVE CHROM+512+13*8,$B800+3*8,8
MOVE ADR("\30\38\30\20\70\20\20\70"),$B800+4*8,8
MOVE ADR("\7C\D6\D6\7C\38\7C\54\92"),$B800+5*8,8
MOVE $B800+5*8,$B800+6*8,7*8
MOVE SHIPADR-2,$B800+33*8,8

'draw the mountains
DIM MTNY(FIELDWIDTH-1)
C.2
Y=1
FOR I=0 TO (FIELDWIDTH-1)
    'choose random slope
    R=RAND(3)+1
    'check for top or bottom boundaries
    R=R+(Y=0)*(R=1)-(Y=5)*(R=2)
    'increase height if needed
    Y=Y-(R=1)
    'insert character into last last 5 rows of map
    POKE $A4C0+(Y+14)*FIELDWIDTH+I,R+64 
    'remember the height
    MTNY(I)=Y
    PLOT 79-QUARTER+I/2,16+Y-(Y=21)
    'decrease height if needed
    Y=Y+(R=2)
NEXT I

POKE 559,34+12+16: REM ENABLE PM DMA WITH 1-LINE RES AND TURN ANTIC BACK ON

'set fine scroll to show all
POKE $D404,12

'draw the RADAR outline
COLOR 3
PLOT 0,21:DRAWTO 159,21
PLOT 79-QUARTER,21:DRAWTO 79-QUARTER,0
DRAWTO 79+QUARTER,0:DRAWTO 79+QUARTER,21

'generate some BADDIES


'COMPLETE THE DISPLAY LIST
'throw in a line of gr.7
POKE DLIST+31,0
'followed by gr.1 graphics 
MOVE LUT+70*60,DLIST+32,60
'end the list
MOVE ADR("\41\50\A0"),DLIST+92,3
'one line of graphics 1 mapped to text window; blank line; start gr.15
MOVE ADR("\00\4E\50\A1"),DLIST+6,4

XWLD = 70
DX=-1
PY=$3E : REM POSITION THE Y-LOCATION SO SHIP LOCATIONS OVERLAP CHARACTER LOCATIONS
LIVES=5
SCORE=0
?"\E1\E1\E1\E1\E1";
POKE $D000,120

WHILE 1=1
    POKE 657,12
    ?SCORE;

    REM MAKE RAINBOW COLOR
    REM CC=(CC+16) MOD 256
    REM POKE 708,CC

    REM PROCESS FILE BUTTON
    F0=F
    F=STRIG(0)
    FIRE=F0&(1-F):REM DISABLE RAPID FIRE
    FOR I=1 TO 3
        FY=PY*FIRE+FY*(1-FIRE) : REM REMEMBER Y-LOCATION OF LASER
        POKE PM+I*$100+$48+FY,FIRE*$FF : REM ADD OR REMOVE LASER IN PLAYER
        POKE $D000+I,112+4*DX+20*DX*I :  REM POSITION LASER
        POKE 704+I,8+16*RAND(16) : REM SET A RANDOM COLOR
    NEXT I

    REM PROCESS STICK INPUT
    S=STICK(0)
    UD=(S&2=0)*(PY<145)-(S&1=0)*(PY>0)
    PY=PY+4*UD : REM LIMITS 46144 , 46288 B440-B4D0
    LR=(S&8=0)-(S&4=0) : REM CREATE +/1 VALUES FOR LEFT/RIGHT
    VX = .5*VX + .5*LR : REM USE IIR FILTER FOR ACCELERATION/DRAG EFFECT
    DX = DX*(LR=0)+LR : REM DIRECTION INDICATOR
    XWLD = XWLD + VX : REM UPDATE HORIZONTAL POSITION IN WORLD COORDINATES
    XWLD = (XWLD+139) MOD 139 : REM WRAP AROUND COORDINATE
    XF=FRAC(XWLD)*8 : REM FINE SCROLL VALUE
    TX=TRUNC(XWLD)*60 : REM COARSE SCROLL VALUE

    REM MISSILES IN RADAR: 87 MIN TO 165 MAX = MIDDILE IS 126+/-5
    REM EQUATION: 0 -> 87 OR 88; 70-> 121; 140->155
    RDRX=XWLD/2+87 : REM CONVERT WORLD COORDINATE TO RADAR COORDINATE

    PAUSE 0 : REM WAIT FOR VERTICAL BLANK TO REDUCE FLICKER
    POKE $D404,12-XF : REM FINE SCROLL
    MOVE LUT+TX,DLIST+32,60 : REM COPY IN DL FOR COARSE SCROLL
    POKE $D006,RDRX+10 : REM MOVE INDICATORS IN RADAR DISPLAY
    POKE $D007,RDRX
    MOVE SHIPADR-5*DX,$40+PM+PY,14 : REM PUT SHIP ON THE SCREEN

    REM PROCESS BADDIES
    
    
WEND

