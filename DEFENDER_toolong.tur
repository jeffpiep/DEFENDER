'-----------------------------------------------------------
'
'                       DEFENDER
'
'For Atari 800XL 8-Bit BASIC 10-Liner
'One-player game with joystick
'
'Jeff Piepmeier
'January 31, 2018
'http://jeffpiepmeier.blogspot.com/
'http://github.com/jeffpiep/
'
'Parsed with TurboBASIC XL Parser Tool 
'http://github.com/dmsc/tbxl-parser
$options +optimize
'Tested on Altirra
'http://www.virtualdub.org/altirra.html
'bitmap graphics developed with Mad Studio
'http://atariage.com/forums/topic/258728-mad-studio/
'-----------------------------------------------------------

'base the memory map on graphics mode 15
GR.15
'color scheme: 
MOVE ADR("\0E\36\D6\88"),708,4

'START: build new display list
REM DLIST = $A050: REM GET DISPLAY LIST LOCATION - SHOULD BE A050
'SHORTEN DISPLAY LIST SO STEAL FEWER CPU CYCLES
'one line of graphics 1 mapped to text window; wait for vertical scan
MOVE ADR("\46\62\BF\41\50\A0"),$A053,7

'write coarse-scrolling LUT to RAM below video
FIELDWIDTH = 160 : REM OR 180
QUARTER = FIELDWIDTH/4 : REM WILL USE LATER
PSIZE = FIELDWIDTH*12
LUT=$7F00
ADDR=LUT
LINEONE=42176 : REM start of character graphics in video ram
FOR COLS=0 TO 139
    ? 139-COLS;"  ";
    FOR ROWS=0 TO 19
        POKE ADDR,86 : REM GR.1 CHARACTER MODE
        DPOKE ADDR+1,LINEONE+COLS+ROWS*FIELDWIDTH
        ADDR=ADDR+3
    NEXT ROWS
    POKE 657,2
NEXT COLS

SOUND 0,192,10,14
SOUND 1,193,10,14

'COMPLETE THE DISPLAY LIST
'throw in a line of gr.7
POKE $A06F,0 : REM DLIST+31,0
'followed by gr.1 graphics 
MOVE $8F68,$A070,60 : REM LUT+70*60,DLIST+32,60
'end the list
MOVE ADR("\41\50\A0"),$A0AC,3 : REM DLIST+92,3
'one line of graphics 1 mapped to text window; blank line; start gr.15
MOVE ADR("\00\4E\50\A1"),$A056,4 : REM DLIST+6,4

'set up PM graphics
'SET UP SPRITES/PLAYER MISSLE GRAPHICS
POKE $D407,$B0 : REM PMBASE at B000 inside of GR 15 setup
PM=$B400:REM PM*$100+$200 TO POINT TO FIRST PLAYER
DPOKE 704,8 : REM COLOR OF PLAYER 0, DPOKE SAVES A SPACE OVER POKE
DPOKE $D008, $0301 : REM DOUBLE WIDTH P0, QUAD for P1
DPOKE $D00A, $0303 : REM QUAD WIDTH P2,P3
POKE 53277,3: REM ENABLE PM DISPLAY
SHIPADR = ADR("\00\00\00\00\20\70\F8\7E\FF\70\00\00\00\00\04\0E\1F\7E\FF\0E\00\00\00\00") + 5
REM Priority options in order                      Decimal   Bit
REM Player 0 - 3, playfield 0 - 3, BAK
REM (background)                                       1      0
REM Four missiles = fifth player                      16      4
REM Overlaps of players have 3rd color                32      5
POKE 623,49 : REM SET GPRIOR 49 = 1+16+32
REM RADAR SPRITE
MOVE ADR("\F0\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\F0"),$B32A,20
POKE 559,34+12+16: REM ENABLE PM DMA WITH 1-LINE RES 

'set up new character set by copying the one in ROM to blank space in gr.15 
CHROM=$E000 : REM PEEK(756)*256
MOVE CHROM,$B800,512
POKE 756,$B8
'copy some ATASCII characters into !"#
MOVE CHROM+512+6*8,$B800+1*8,16
'MOVE CHROM+512+7*8,$B800+2*8,8
MOVE CHROM+512+13*8,$B800+3*8,8
MOVE ADR("\30\38\30\20\70\20\20\70"),$B800+4*8,8
MOVE ADR("\7C\D6\D6\7C\38\7C\54\92"),$B800+5*8,8
MOVE $B800+5*8,$B800+6*8,3*8
MOVE $B800,$B800+9*8,8
MOVE SHIPADR-2,$B800+34*8,8

'draw the RADAR outline
COLOR 3
PLOT 0,21:DRAWTO 159,21
PLOT 78-40,21 : DRAWTO 78-40,0
DRAWTO 80+40,0 : DRAWTO 80+40,21

'draw the mountains
C.2
Y=1
FOR I=0 TO (FIELDWIDTH-1)
    'choose random slope
    R=RAND(3)+1
    'check for top or bottom boundaries
    R=R+(Y=0)*(R=1)-(Y=5)*(R=2)
    'increase height if needed
    Y=Y-(R=1)
    'insert character into last last 5 rows of map
    POKE $A4C0+(Y+14)*FIELDWIDTH+I,R+64 
    'remember the height
    PLOT 79-40+I/2,15+Y
    'decrease height if needed
    Y=Y+(R=2)
NEXT I

'generate some BADDIES
NA = 9
DIM AI(NA,2)
FOR I=0 TO NA-1
    REPEAT 
        PX = RAND(FIELDWIDTH) : REM X LOCATION OF PEOPLE
        PPX = LINEONE+13*FIELDWIDTH+PX 
    UNTIL PEEK(PPX)=0
    AI(I,1) = PPX : REM PLAYFIELD ADDRESS
    POKE AI(I,1),$04 : REM INSERT PEOPLE
    AI(I,2) = LINEONE+PX
    POKE AI(I,2),$09 : REM INSERT LATENT ABDUCTOR
NEXT I

ND = 20 
COLOR 3
FOR I=0 TO ND
    REPEAT 
        X = 10+RAND(FIELDWIDTH-20)
    UNTIL PEEK(LINEONE+X)=0
    Y = 1+RAND(12)
    BB = LINEONE+X+Y*FIELDWIDTH
    POKE BB, $85 : REM PUT DOWN BADDIES
    PLOT 79-QUARTER+((BB-LINEONE) MOD FIELDWIDTH)/2,Y+1
NEXT I

XWLD = 70
DX=-1
PY=$3E : REM POSITION THE Y-LOCATION SO SHIP LOCATIONS OVERLAP CHARACTER LOCATIONS
LIVES=3
SCORE=0
PEOPLE=NA
?"\E2\E2\E2";
POKE $D000,120

SOUND

REPEAT
    POKE 657,12
    ?PEOPLE;"    ";SCORE;

    REM PROCESS FILE BUTTON
    F0=F
    F=STRIG(0)
    FIRE=F0&(1-F):REM DISABLE RAPID FIRE
    FOR I=1 TO 3
        FY=PY*FIRE+FY*(1-FIRE) : REM REMEMBER Y-LOCATION OF LASER
        POKE PM+I*$100+$48+FY,FIRE*$FF : REM ADD OR REMOVE LASER IN PLAYER
        POKE $D000+I,112+10*DX+18*DX*I :  REM POSITION LASER
        POKE 704+I,8+16*RAND(16) : REM SET A RANDOM COLOR
    NEXT I
    
    REM PROCESS STICK INPUT
    S=STICK(0)
    UD=(S&2=0)*(PY<145)-(S&1=0)*(PY>0)
    PY=PY+4*UD : REM LIMITS 46144 , 46288 B440-B4D0
    LR=(S&8=0)-(S&4=0) : REM CREATE +/1 VALUES FOR LEFT/RIGHT
    VX = .5*VX + .5*LR : REM USE IIR FILTER FOR ACCELERATION/DRAG EFFECT
    DX = DX*(LR=0)+LR : REM DIRECTION INDICATOR
    XWLD = XWLD + VX : REM UPDATE HORIZONTAL POSITION IN WORLD COORDINATES
    XWLD = (XWLD+139) MOD 139 : REM WRAP AROUND COORDINATE
    XF=FRAC(XWLD)*8 : REM FINE SCROLL VALUE
    XT=TRUNC(XWLD)*60 : REM COARSE SCROLL VALUE

    REM MISSILE SPRITES FOR RADAR POSITION INDICTATOR: 87 MIN TO 165 MAX = MIDDILE IS 126+/-5
    REM EQUATION: 0 -> 87 OR 88; 70-> 121; 140->155
    REM C.0 : PLOT RDRSX,RDRSY
    POKE $B32A+RDRSY,$90
    RDRX = XWLD/2+87 : REM CONVERT WORLD COORDINATE TO RADAR COORDINATE
    RDRSY = (PY+4)/8 : REM RADAR Y FOR SHIP -6 TO 146 : 0 TO 19
    POKE $B32A+RDRSY,$91
    REM C.1 : PLOT RDRSX,RDRSY
    
    
    PAUSE 0 : REM WAIT FOR VERTICAL BLANK TO REDUCE FLICKER
    POKE $D404,12-XF : REM FINE SCROLL
    MOVE LUT+XT,$A070,60 : REM DLIST+32,60 : REM COPY IN DL FOR COARSE SCROLL
    POKE $D006,RDRX+11 : REM MOVE INDICATORS IN RADAR DISPLAY
    POKE $D007,RDRX
    POKE $D004,RDRX+5 : REM MOVE THE SHIP IN THE RADAR DISPLAY
    MOVE SHIPADR-5*DX,$40+PM+PY,14 : REM PUT SHIP ON THE SCREEN
    
    REM PROCESS HITS
    IF FIRE=1
        ROWS=TRUNC((FY+6)/8)
        FOR I=2 TO 10
            FPOS=TRUNC(LINEONE+ROWS*FIELDWIDTH+XWLD+10.5+I*DX)
            WHAT=PEEK(FPOS)&$F
            IF WHAT>3
                POKE FPOS,0
                C.0 : PLOT 79 - QUARTER + ((FPOS-LINEONE) MOD FIELDWIDTH)/2,ROWS+1
                SCORE=SCORE+100*(WHAT>4)
                PEOPLE=PEOPLE-(WHAT=4)
            ENDIF
        NEXT I
    ENDIF
            
    REM PROCESS COLLISION
    COLLISION=PEEK($D004)
    IF COLLISION=4
        ROWS=TRUNC((PY+6)/8)
        FPOS=TRUNC(LINEONE+ROWS*FIELDWIDTH+XWLD+10)
        IF PEEK(FPOS)<>0
            POKE $D000,0
            POKE 657,LIVES+1
            ?" ";
            LIVES=LIVES-1
            SCORE=SCORE+100
            POKE FPOS,0
            C.0 : PLOT 79 - QUARTER + ((FPOS-LINEONE) MOD FIELDWIDTH)/2,ROWS+1
            VX=0
            PAUSE 60
            POKE $D000,120
        ENDIF
    ENDIF
    POKE $D01E,1 : REM HITCLR

    REM PROCESS AI
    REM PROCESS PEOPLE THEN ABDUCTORS
    LL=AI(IDX,1)
    IF LL>0
        LLP=LL+FIELDWIDTH
        IF PEEK(LL)=4
        IF (PEEK(LL-FIELDWIDTH)=0) & (PEEK(LLP)=0)
            POKE LL,0
            POKE LLP,4
            AI(IDX,1)=LLP
            X = 79 - QUARTER + ((LL-LINEONE) MOD FIELDWIDTH)/2
            Y = 1 + (LL-LINEONE) DIV FIELDWIDTH
            COLOR 0 : PLOT X,Y
        ENDIF
        X = 79 - QUARTER + ((AI(IDX,1)-LINEONE) MOD FIELDWIDTH)/2
        Y = 1 + (AI(IDX,1)-LINEONE) DIV FIELDWIDTH
        COLOR 1 : PLOT X,Y
        ENDIF
    ENDIF
    
    LL=AI(IDX,2)
    IF LL>0
        PLL=PEEK(LL)
        LLP = LL+FIELDWIDTH
        PLP = PEEK(LLP)
        LLM = LL-FIELDWIDTH
        IF PLL=$87
            IF PLP=0
                X = 79 - QUARTER + ((LL-LINEONE) MOD FIELDWIDTH)/2
                Y = 1 + (LL-LINEONE) DIV FIELDWIDTH
                COLOR 0 : PLOT X,Y
                COLOR 3 : PLOT X,Y+1
                POKE LL,0
                POKE LLP,$87
                AI(IDX,2)=LLP
            ELSE : IF PLP=4
                POKE LL,$88
                ENDIF
            ENDIF
        ENDIF
        IF PLL=$88
            X = 79 - QUARTER + ((LL-LINEONE) MOD FIELDWIDTH)/2
            Y = 1 + (LL-LINEONE) DIV FIELDWIDTH
            COLOR 0 : PLOT X,Y : PLOT X,Y+1
            IF LLM>LINEONE
                POKE LLP,0
                POKE LLM,$88
                AI(IDX,2)=LLM
                POKE LL,4
                AI(IDX,1)=LL
                COLOR 1 : PLOT X,Y
                COLOR 3 : PLOT X,Y-1
            ELSE
                POKE LLP,0
                POKE LL,0
                AI(IDX,1)=-1
                AI(IDX,2)=-1
                PEOPLE=PEOPLE-1
            ENDIF
        ENDIF
        IF PLL=9
            IF RND<.05
                POKE LL,$87
            ENDIF
        ENDIF
    ENDIF : REM LL>0

    IDX=(IDX+1) MOD NA
UNTIL LIVES=0
?"\1Egame over";
